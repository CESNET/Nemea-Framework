
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'EXP_ALL OP_PLUS OP_MINUS OP_TIMES OP_DIVIDE OP_MODULO OP_OR OP_XOR OP_AND OP_NOT OP_EXISTS OP_OR_P OP_XOR_P OP_AND_P OP_LIKE OP_IN OP_IS OP_EQ OP_NE OP_GT OP_GE OP_LT OP_LE COMMA LPAREN RPAREN LBRACK RBRACK IPV4 IPV6 INTEGER FLOAT CONSTANT VARIABLEexpression : xor_expression OP_OR expression\n                      | xor_expressionxor_expression : and_expression OP_XOR xor_expression\n                          | and_expressionand_expression : or_p_expression OP_AND and_expression\n                          | or_p_expressionor_p_expression : xor_p_expression OP_OR_P or_p_expression\n                      | xor_p_expressionxor_p_expression : and_p_expression OP_XOR_P xor_p_expression\n                          | and_p_expressionand_p_expression : not_expression OP_AND_P and_p_expression\n                          | not_expressionnot_expression : OP_NOT ex_expression\n                          | ex_expressionex_expression : OP_EXISTS cmp_expression\n                         | cmp_expressioncmp_expression : term OP_LIKE cmp_expression\n                          | term OP_IN cmp_expression\n                          | term OP_IS cmp_expression\n                          | term OP_EQ cmp_expression\n                          | term OP_NE cmp_expression\n                          | term OP_GT cmp_expression\n                          | term OP_GE cmp_expression\n                          | term OP_LT cmp_expression\n                          | term OP_LE cmp_expression\n                          | termterm : factor OP_PLUS term\n                | factor OP_MINUS term\n                | factor OP_TIMES term\n                | factor OP_DIVIDE term\n                | factor OP_MODULO term\n                | factorfactor : IPV4\n                  | IPV6\n                  | INTEGER\n                  | FLOAT\n                  | VARIABLE\n                  | CONSTANT\n                  | LBRACK list RBRACK\n                  | LPAREN expression RPARENlist : IPV4\n                | IPV6\n                | INTEGER\n                | FLOAT\n                | VARIABLE\n                | CONSTANT\n                | IPV4 COMMA list\n                | IPV6 COMMA list\n                | INTEGER COMMA list\n                | FLOAT COMMA list\n                | VARIABLE COMMA list\n                | CONSTANT COMMA list'
    
_lr_action_items = {'OP_AND_P':([1,2,4,6,7,10,12,14,15,17,21,22,30,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,74,],[-38,-37,-34,-16,-32,-14,-35,-26,42,-36,-33,-13,-15,-31,-28,-29,-30,-27,-40,-20,-19,-22,-21,-24,-18,-25,-23,-17,-39,]),'OP_MODULO':([1,2,4,7,12,17,21,59,74,],[-38,-37,-34,24,-35,-36,-33,-40,-39,]),'CONSTANT':([0,3,9,11,18,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,51,72,73,75,76,77,78,],[1,1,1,1,45,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,45,45,45,45,45,45,]),'OP_MINUS':([1,2,4,7,12,17,21,59,74,],[-38,-37,-34,25,-35,-36,-33,-40,-39,]),'OP_LT':([1,2,4,7,12,14,17,21,53,54,55,56,57,59,74,],[-38,-37,-34,-32,-35,37,-36,-33,-31,-28,-29,-30,-27,-40,-39,]),'OP_PLUS':([1,2,4,7,12,17,21,59,74,],[-38,-37,-34,28,-35,-36,-33,-40,-39,]),'OP_IN':([1,2,4,7,12,14,17,21,53,54,55,56,57,59,74,],[-38,-37,-34,-32,-35,38,-36,-33,-31,-28,-29,-30,-27,-40,-39,]),'OP_NOT':([0,11,23,29,32,42,43,51,],[3,3,3,3,3,3,3,3,]),'IPV6':([0,3,9,11,18,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,51,72,73,75,76,77,78,],[4,4,4,4,48,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,48,48,48,48,48,48,]),'OP_LE':([1,2,4,7,12,14,17,21,53,54,55,56,57,59,74,],[-38,-37,-34,-32,-35,39,-36,-33,-31,-28,-29,-30,-27,-40,-39,]),'OP_DIVIDE':([1,2,4,7,12,17,21,59,74,],[-38,-37,-34,27,-35,-36,-33,-40,-39,]),'RPAREN':([1,2,4,5,6,7,8,10,12,13,14,15,16,17,19,21,22,30,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,79,],[-38,-37,-34,-4,-16,-32,-10,-14,-35,-8,-26,-12,-6,-36,-2,-33,-13,-15,59,-3,-31,-28,-29,-30,-27,-9,-40,-7,-20,-19,-22,-21,-24,-18,-25,-23,-17,-11,-5,-39,-1,]),'OP_TIMES':([1,2,4,7,12,17,21,59,74,],[-38,-37,-34,26,-35,-36,-33,-40,-39,]),'OP_AND':([1,2,4,6,7,8,10,12,13,14,15,16,17,21,22,30,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,],[-38,-37,-34,-16,-32,-10,-14,-35,-8,-26,-12,43,-36,-33,-13,-15,-31,-28,-29,-30,-27,-9,-40,-7,-20,-19,-22,-21,-24,-18,-25,-23,-17,-11,-39,]),'COMMA':([44,45,47,48,49,50,],[72,73,75,76,77,78,]),'OP_XOR_P':([1,2,4,6,7,8,10,12,14,15,17,21,22,30,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,74,],[-38,-37,-34,-16,-32,29,-14,-35,-26,-12,-36,-33,-13,-15,-31,-28,-29,-30,-27,-40,-20,-19,-22,-21,-24,-18,-25,-23,-17,-11,-39,]),'INTEGER':([0,3,9,11,18,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,51,72,73,75,76,77,78,],[12,12,12,12,50,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,50,50,50,50,50,50,]),'$end':([1,2,4,5,6,7,8,10,12,13,14,15,16,17,19,20,21,22,30,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,79,],[-38,-37,-34,-4,-16,-32,-10,-14,-35,-8,-26,-12,-6,-36,-2,0,-33,-13,-15,-3,-31,-28,-29,-30,-27,-9,-40,-7,-20,-19,-22,-21,-24,-18,-25,-23,-17,-11,-5,-39,-1,]),'OP_EXISTS':([0,3,11,23,29,32,42,43,51,],[9,9,9,9,9,9,9,9,9,]),'OP_IS':([1,2,4,7,12,14,17,21,53,54,55,56,57,59,74,],[-38,-37,-34,-32,-35,34,-36,-33,-31,-28,-29,-30,-27,-40,-39,]),'RBRACK':([44,45,46,47,48,49,50,80,81,82,83,84,85,],[-44,-46,74,-41,-42,-45,-43,-50,-52,-47,-48,-51,-49,]),'OP_NE':([1,2,4,7,12,14,17,21,53,54,55,56,57,59,74,],[-38,-37,-34,-32,-35,36,-36,-33,-31,-28,-29,-30,-27,-40,-39,]),'LPAREN':([0,3,9,11,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,51,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'OP_OR_P':([1,2,4,6,7,8,10,12,13,14,15,17,21,22,30,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,74,],[-38,-37,-34,-16,-32,-10,-14,-35,32,-26,-12,-36,-33,-13,-15,-31,-28,-29,-30,-27,-9,-40,-20,-19,-22,-21,-24,-18,-25,-23,-17,-11,-39,]),'VARIABLE':([0,3,9,11,18,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,51,72,73,75,76,77,78,],[2,2,2,2,49,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,49,49,49,49,49,49,]),'OP_XOR':([1,2,4,5,6,7,8,10,12,13,14,15,16,17,21,22,30,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,],[-38,-37,-34,23,-16,-32,-10,-14,-35,-8,-26,-12,-6,-36,-33,-13,-15,-31,-28,-29,-30,-27,-9,-40,-7,-20,-19,-22,-21,-24,-18,-25,-23,-17,-11,-5,-39,]),'OP_LIKE':([1,2,4,7,12,14,17,21,53,54,55,56,57,59,74,],[-38,-37,-34,-32,-35,41,-36,-33,-31,-28,-29,-30,-27,-40,-39,]),'OP_EQ':([1,2,4,7,12,14,17,21,53,54,55,56,57,59,74,],[-38,-37,-34,-32,-35,33,-36,-33,-31,-28,-29,-30,-27,-40,-39,]),'FLOAT':([0,3,9,11,18,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,51,72,73,75,76,77,78,],[17,17,17,17,44,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,44,44,44,44,44,44,]),'OP_GT':([1,2,4,7,12,14,17,21,53,54,55,56,57,59,74,],[-38,-37,-34,-32,-35,35,-36,-33,-31,-28,-29,-30,-27,-40,-39,]),'LBRACK':([0,3,9,11,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,51,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'OP_OR':([1,2,4,5,6,7,8,10,12,13,14,15,16,17,19,21,22,30,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,],[-38,-37,-34,-4,-16,-32,-10,-14,-35,-8,-26,-12,-6,-36,51,-33,-13,-15,-3,-31,-28,-29,-30,-27,-9,-40,-7,-20,-19,-22,-21,-24,-18,-25,-23,-17,-11,-5,-39,]),'OP_GE':([1,2,4,7,12,14,17,21,53,54,55,56,57,59,74,],[-38,-37,-34,-32,-35,40,-36,-33,-31,-28,-29,-30,-27,-40,-39,]),'IPV4':([0,3,9,11,18,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,51,72,73,75,76,77,78,],[21,21,21,21,47,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,47,47,47,47,47,47,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([0,3,9,11,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,51,],[14,14,14,14,14,53,54,55,56,57,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'not_expression':([0,11,23,29,32,42,43,51,],[15,15,15,15,15,15,15,15,]),'ex_expression':([0,3,11,23,29,32,42,43,51,],[10,22,10,10,10,10,10,10,10,]),'list':([18,72,73,75,76,77,78,],[46,80,81,82,83,84,85,]),'cmp_expression':([0,3,9,11,23,29,32,33,34,35,36,37,38,39,40,41,42,43,51,],[6,6,30,6,6,6,6,61,62,63,64,65,66,67,68,69,6,6,6,]),'expression':([0,11,51,],[20,31,79,]),'factor':([0,3,9,11,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,51,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'xor_expression':([0,11,23,51,],[19,19,52,19,]),'xor_p_expression':([0,11,23,29,32,43,51,],[13,13,13,58,13,13,13,]),'or_p_expression':([0,11,23,32,43,51,],[16,16,16,60,16,16,]),'and_expression':([0,11,23,43,51,],[5,5,5,71,5,]),'and_p_expression':([0,11,23,29,32,42,43,51,],[8,8,8,8,8,70,8,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> xor_expression OP_OR expression','expression',3,'p_expression','gparser.py',192),
  ('expression -> xor_expression','expression',1,'p_expression','gparser.py',193),
  ('xor_expression -> and_expression OP_XOR xor_expression','xor_expression',3,'p_xor_expression','gparser.py',200),
  ('xor_expression -> and_expression','xor_expression',1,'p_xor_expression','gparser.py',201),
  ('and_expression -> or_p_expression OP_AND and_expression','and_expression',3,'p_and_expression','gparser.py',208),
  ('and_expression -> or_p_expression','and_expression',1,'p_and_expression','gparser.py',209),
  ('or_p_expression -> xor_p_expression OP_OR_P or_p_expression','or_p_expression',3,'p_or_p_expression','gparser.py',216),
  ('or_p_expression -> xor_p_expression','or_p_expression',1,'p_or_p_expression','gparser.py',217),
  ('xor_p_expression -> and_p_expression OP_XOR_P xor_p_expression','xor_p_expression',3,'p_xor_p_expression','gparser.py',224),
  ('xor_p_expression -> and_p_expression','xor_p_expression',1,'p_xor_p_expression','gparser.py',225),
  ('and_p_expression -> not_expression OP_AND_P and_p_expression','and_p_expression',3,'p_and_p_expression','gparser.py',232),
  ('and_p_expression -> not_expression','and_p_expression',1,'p_and_p_expression','gparser.py',233),
  ('not_expression -> OP_NOT ex_expression','not_expression',2,'p_not_expression','gparser.py',240),
  ('not_expression -> ex_expression','not_expression',1,'p_not_expression','gparser.py',241),
  ('ex_expression -> OP_EXISTS cmp_expression','ex_expression',2,'p_ex_expression','gparser.py',248),
  ('ex_expression -> cmp_expression','ex_expression',1,'p_ex_expression','gparser.py',249),
  ('cmp_expression -> term OP_LIKE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',256),
  ('cmp_expression -> term OP_IN cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',257),
  ('cmp_expression -> term OP_IS cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',258),
  ('cmp_expression -> term OP_EQ cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',259),
  ('cmp_expression -> term OP_NE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',260),
  ('cmp_expression -> term OP_GT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',261),
  ('cmp_expression -> term OP_GE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',262),
  ('cmp_expression -> term OP_LT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',263),
  ('cmp_expression -> term OP_LE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',264),
  ('cmp_expression -> term','cmp_expression',1,'p_cmp_expression','gparser.py',265),
  ('term -> factor OP_PLUS term','term',3,'p_term','gparser.py',272),
  ('term -> factor OP_MINUS term','term',3,'p_term','gparser.py',273),
  ('term -> factor OP_TIMES term','term',3,'p_term','gparser.py',274),
  ('term -> factor OP_DIVIDE term','term',3,'p_term','gparser.py',275),
  ('term -> factor OP_MODULO term','term',3,'p_term','gparser.py',276),
  ('term -> factor','term',1,'p_term','gparser.py',277),
  ('factor -> IPV4','factor',1,'p_factor','gparser.py',284),
  ('factor -> IPV6','factor',1,'p_factor','gparser.py',285),
  ('factor -> INTEGER','factor',1,'p_factor','gparser.py',286),
  ('factor -> FLOAT','factor',1,'p_factor','gparser.py',287),
  ('factor -> VARIABLE','factor',1,'p_factor','gparser.py',288),
  ('factor -> CONSTANT','factor',1,'p_factor','gparser.py',289),
  ('factor -> LBRACK list RBRACK','factor',3,'p_factor','gparser.py',290),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','gparser.py',291),
  ('list -> IPV4','list',1,'p_list','gparser.py',298),
  ('list -> IPV6','list',1,'p_list','gparser.py',299),
  ('list -> INTEGER','list',1,'p_list','gparser.py',300),
  ('list -> FLOAT','list',1,'p_list','gparser.py',301),
  ('list -> VARIABLE','list',1,'p_list','gparser.py',302),
  ('list -> CONSTANT','list',1,'p_list','gparser.py',303),
  ('list -> IPV4 COMMA list','list',3,'p_list','gparser.py',304),
  ('list -> IPV6 COMMA list','list',3,'p_list','gparser.py',305),
  ('list -> INTEGER COMMA list','list',3,'p_list','gparser.py',306),
  ('list -> FLOAT COMMA list','list',3,'p_list','gparser.py',307),
  ('list -> VARIABLE COMMA list','list',3,'p_list','gparser.py',308),
  ('list -> CONSTANT COMMA list','list',3,'p_list','gparser.py',309),
]
