#!/usr/bin/python
# -*- coding: utf-8 -*- 
import socket
import sys
import os

SOCKET_PATH = '/var/run/nemea-supervisor/prot_flows.sock'

def getData():
	sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
	try:
		sock.connect(SOCKET_PATH)
	except socket.error as msg:
		sys.stderr.write(str(msg))
		sys.exit(1)

	data = ""
	while True:
		tmp = sock.recv(4096)
		data += tmp
		if tmp == "":
			break

	return data


def getConfig():
	headers = ["icmp", "tcp", "udp", "sctp", "other"]
	config = """graph_title Traffic L4 protocol flows
graph_args -l 0
graph_category traffic-monitoring
graph_data_size custom 1051200, 288 3650, 8640 120, 105120 10
graph_vlabel flows/second
graph_info The number of flows per second specified with L4 protocol in 5 minute interval.
graph_order"""
	
	for key in headers:
		config += " " + key

	for key in headers:
		config += "\n" + key + ".label " + key
		config += "\n" + key + ".info " + key
		config += "\n" + key + ".draw AREASTACK"
		config += "\n" + key + ".type DERIVE"
		config += "\n" + key + ".min 0"

	print(config)

def getValues(data):
	headers = ["icmp", "tcp", "udp", "sctp", "other"]
	data = data.split('\n')
	data = dict(zip(data[0].split(','), data[1].split(',')))
	for key in headers:
		print("{0}.value {1}".format(key, data[key]))

if len(sys.argv) == 2 and sys.argv[1] == "autoconf":
	print("yes")
elif len(sys.argv) == 2 and sys.argv[1] == "config":
	getConfig()
elif len(sys.argv) == 2 and sys.argv[1] == "suggest":
	print("")
else:
	data = getData()
	getValues(data)